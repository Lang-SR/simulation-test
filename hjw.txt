还好以前也用过github，花了两小时速成github,并通过github desktop跳过对git bash命令行操作的学习。并在社区中寻找了汉化插件，通过desktop中的教程初步完成了对github的管理使用。
使用git对代码进行版本控制，首先要在github上创建一个仓库，或者是将别人的在线仓库拉取到本地，随后在本地仓库上对代码进行修改，修改完毕后commit到主仓库中，并备注修改内容，此举可以让我们对代码的修改留下标记和备份。
我们还可以用push功能将本地仓库的更新，推送到在线仓库；反之可以利用pull将在线仓库的代码拉取到本地。值得一提的是，本地仓库版本若落后于在线仓库，将无法push，同理，在本地仓库对代码进行更新时，也需要pull一下同步在线仓库的最新更新。这很大程度上能避免某些尴尬情况的出现————比如在本地debug了半天依赖错误，解决之后push一看，原来在线仓库早解决这个问题了。
我们还可以在一个仓库中创建多个分支，以完成在基础代码上开发相对独立功能的新代码，或者解决多人同时开发同一代码，明明修改前刚pull过，提交的时候又冲突的问题。同理有相同的commit。当一个分支功能开发的较为完善时，我们可以将分支合并到main，把这些代码变成基础代码，并进一步以此创建新的分支，不断完成对代码的开发。此举有利于多成员对一个代码任务的集体开发，方便查看成员进度，并及时了解他们的想法。
git还提供了非常方便的版本回滚功能，在我们每次commit时，会在git中保存旧版本（在vscode中也有对应的git插件），在编辑时可以检查旧版本的文件，并将我们想要的代码重新修改过来，然后再提交即可。

汽车理论-杨万福主编 ISBN978-7-5623-2862-9 华南农业大学电子图书馆-超星电子图书馆可查阅
整车动力学是指将汽车的行驶运动用一个个物理模型去替代，将一个复杂的整体运动分解成多个步骤，并通过物理分析的办法逐一建立汽车各参数之间的方程，进而分析汽车的动态运动情况。并为了提高理论分析准确性和适当简化问题，如引入二自由度模型以研究汽车的操纵稳定性，此外还有汽车的动力性，制动性，平顺性，通过性等等。通过引入物理模型，抽象分析如汽车的轮胎、空气动力阻力、车辆质量之间的关系，去分析汽车的理想运动情况，进而总结出预期数据指标，在进行仿真时提供可靠且重要的理论基础。
使用simulink进行仿真，一是simulink作为一个成熟的数学工具，能帮助我们轻松搭建起复杂的数学物理模型，并且有具象的图形GUI和3D化视图帮助我们的理解。二是具有众多的学习教程和网络笔记，在遇到困难问题时可以方便寻找解决方法，例如在官网FSAE上了解成功的团队如何在赛车开发中使用 MATLAB 和 Simulink。
111
